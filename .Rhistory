library(lattice)
dfd <- data.frame(times=dectimes, means=weekdaymeans, daytype="weekday")
dfe <- data.frame(times=dectimes, means=weekendmeans, daytype="weekend")
df <- rbind(dfd,dfe)
xyplot(means~times|daytype, data=df, type="l", xlab="Interval", ylab="Number of steps",layout=c(1,2), ylim=c(0,250))
#Calculate a vector of day names.
weekday <- weekdays(as.Date(activityf$date,format="%Y-%m-%d"))
#Calculate a vector of booleans indicating weekend days.
weekend <- (weekday == "Saturday") | (weekday == "Sunday")
#Caclculate the interval means for each and plot them.
weekdaymeans <- colMeans(activityf[!weekend,-1], na.rm=TRUE)
weekendmeans <- colMeans(activityf[weekend,-1], na.rm=TRUE)
library(lattice)
dfd <- data.frame(times=dectimes, means=weekdaymeans, daytype="weekday")
dfe <- data.frame(times=dectimes, means=weekendmeans, daytype="weekend")
df <- rbind(dfd,dfe)
xyplot(means~times|daytype, data=df, type="l", xlab="Interval", ylab="Number of steps",layout=c(1,2), ylim=c(0,250))
View(activity)
daysums <- rowSums(activityw[,-1], na.rm=TRUE)
hist(daysums,breaks=seq(0,25000,by=1000), main="Histogram of Daily Steps",  xlab="Steps")
daysums2 <- aggregate(activity, by=list("date"), FUN=sum, na.rm=TRUE)
daysums <- rowSums(activityw[,-1], na.rm=TRUE)
hist(daysums,breaks=seq(0,25000,by=1000), main="Histogram of Daily Steps",  xlab="Steps")
daysums2 <- aggregate(data=activity, by=list("date"), FUN=sum, na.rm=TRUE)
daysums <- rowSums(activityw[,-1], na.rm=TRUE)
hist(daysums,breaks=seq(0,25000,by=1000), main="Histogram of Daily Steps",  xlab="Steps")
daysums2 <- aggregate(activity, by=list(date), FUN=sum, na.rm=TRUE)
daysums <- rowSums(activityw[,-1], na.rm=TRUE)
hist(daysums,breaks=seq(0,25000,by=1000), main="Histogram of Daily Steps",  xlab="Steps")
daysums2 <- aggregate(activity, by=list(date), FUN=sum)
daysums <- rowSums(activityw[,-1], na.rm=TRUE)
hist(daysums,breaks=seq(0,25000,by=1000), main="Histogram of Daily Steps",  xlab="Steps")
daysums2 <- aggregate(activity, by=list(date), FUN=mean, na.rm=TRUE)
daysums <- rowSums(activityw[,-1], na.rm=TRUE)
hist(daysums,breaks=seq(0,25000,by=1000), main="Histogram of Daily Steps",  xlab="Steps")
daysums2 <- aggregate(activity, by=list(activity$date), FUN=mean, na.rm=TRUE)
#aggregate(activity, by=list(date), FUN=sum)
hist(daysums2,breaks=seq(0,25000,by=1000), main="Histogram of Daily Steps",  xlab="Steps")
View(daysums2)
View(activity)
View(daysums2)
daysums <- rowSums(activityw[,-1], na.rm=TRUE)
hist(daysums,breaks=seq(0,25000,by=1000), main="Histogram of Daily Steps",  xlab="Steps")
daysums2 <- aggregate(activity, by=list(activity$date), FUN=mean, na.rm=TRUE)
#aggregate(activity, by=list(date), FUN=sum)
hist(daysums2$Groups.1,breaks=seq(0,25000,by=1000), main="Histogram of Daily Steps",  xlab="Steps")
View(daysums2)
View(activity)
daysums <- rowSums(activityw[,-1], na.rm=TRUE)
hist(daysums,breaks=seq(0,25000,by=1000), main="Histogram of Daily Steps",  xlab="Steps")
daysums2 <- aggregate(activity, by=list(activity$date), FUN=sum, na.rm=TRUE)
daysums <- rowSums(activityw[,-1], na.rm=TRUE)
hist(daysums,breaks=seq(0,25000,by=1000), main="Histogram of Daily Steps",  xlab="Steps")
daysums2 <- aggregate(activity, by=list(activity$date), FUN=mean, na.rm=TRUE)
#aggregate(activity, by=list(date), FUN=sum)
hist(daysums2$steps,breaks=seq(0,25000,by=1000), main="Histogram of Daily Steps",  xlab="Steps")
cat("The mean number of steps per day is ",round(mean(daysums, na.rm=TRUE)),".\n", sep="")
cat("The median number of steps per day is ",round(median(daysums, na.rm=TRUE)),".\n", sep="")
daysums <- rowSums(activityw[,-1], na.rm=TRUE)
hist(daysums,breaks=seq(0,25000,by=1000), main="Histogram of Daily Steps",  xlab="Steps")
daysums2 <- aggregate(activity, by=list(activity$date), FUN="sum", na.rm=TRUE)
daysums <- rowSums(activityw[,-1], na.rm=TRUE)
hist(daysums,breaks=seq(0,25000,by=1000), main="Histogram of Daily Steps",  xlab="Steps")
daysums2 <- aggregate(activity, by=list(activity$date), FUN=mean, na.rm=TRUE)
#aggregate(activity, by=list(date), FUN=sum)
hist(daysums2$steps,breaks=seq(0,25,by=1000), main="Histogram of Daily Steps",  xlab="Steps")
daysums <- rowSums(activityw[,-1], na.rm=TRUE)
hist(daysums,breaks=seq(0,25000,by=1000), main="Histogram of Daily Steps",  xlab="Steps")
daysums2 <- aggregate(activity, by=list(activity$date), FUN=mean, na.rm=TRUE)
#aggregate(activity, by=list(date), FUN=sum)
hist(daysums2$steps,breaks=seq(0,25,by=1), main="Histogram of Daily Steps",  xlab="Steps")
daysums <- rowSums(activityw[,-1], na.rm=TRUE)
hist(daysums,breaks=seq(0,25000,by=1000), main="Histogram of Daily Steps",  xlab="Steps")
daysums2 <- aggregate(activity, by=list(activity$date), FUN=mean, na.rm=TRUE)
#aggregate(activity, by=list(date), FUN=sum)
hist(daysums2$steps,breaks=seq(0,250,by=10), main="Histogram of Daily Steps",  xlab="Steps")
cat("The mean number of steps per day is ",round(mean(daysums, na.rm=TRUE)),".\n", sep="")
cat("The median number of steps per day is ",round(median(daysums, na.rm=TRUE)),".\n", sep="")
daysums <- rowSums(activityw[,-1], na.rm=TRUE)
hist(daysums,breaks=seq(0,25000,by=1000), main="Histogram of Daily Steps",  xlab="Steps")
daysums2 <- aggregate(activity, by=list(activity$date), FUN=mean, na.rm=TRUE)
#aggregate(activity, by=list(date), FUN=sum)
hist(daysums2$steps,breaks=seq(0,250,by=10), main="Histogram of Daily Steps",  xlab="Steps")
cat("The mean number of steps per day is ",round(mean(daysums, na.rm=TRUE)),".\n", sep="")
cat("The median number of steps per day is ",round(median(daysums, na.rm=TRUE)),".\n", sep="")
daysums <- rowSums(activityw[,-1], na.rm=TRUE)
hist(daysums,breaks=seq(0,25000,by=1000), main="Histogram of Daily Steps",  xlab="Steps")
daysums2 <- aggregate(activity, by=list(activity$date), FUN=sum, na.rm=TRUE)
daysums <- rowSums(activityw[,-1], na.rm=TRUE)
hist(daysums,breaks=seq(0,25000,by=1000), main="Histogram of Daily Steps",  xlab="Steps")
daysums2 <- aggregate(activity[,c(1,3)], by=list(activity$date), FUN=sum, na.rm=TRUE)
#aggregate(activity, by=list(date), FUN=sum)
hist(daysums2$steps,breaks=seq(0,250,by=10), main="Histogram of Daily Steps",  xlab="Steps")
daysums <- rowSums(activityw[,-1], na.rm=TRUE)
hist(daysums,breaks=seq(0,25000,by=1000), main="Histogram of Daily Steps",  xlab="Steps")
daysums2 <- aggregate(activity[,c(1,3)], by=list(activity$date), FUN=sum, na.rm=TRUE)
#aggregate(activity, by=list(date), FUN=sum)
hist(daysums2$steps,breaks=seq(0,25000,by=1000), main="Histogram of Daily Steps",  xlab="Steps")
cat("The mean number of steps per day is ",round(mean(daysums, na.rm=TRUE)),".\n", sep="")
cat("The median number of steps per day is ",round(median(daysums, na.rm=TRUE)),".\n", sep="")
daysums <- rowSums(activityw[,-1], na.rm=TRUE)
hist(daysums,breaks=seq(0,25000,by=1000), main="Histogram of Daily Steps",  xlab="Steps")
daysums2 <- aggregate(activity[,c(1,3)], by=list(activity$date), FUN=sum, na.rm=FALSE)
#aggregate(activity, by=list(date), FUN=sum)
hist(daysums2$steps,breaks=seq(0,25000,by=1000), main="Histogram of Daily Steps",  xlab="Steps")
cat("The mean number of steps per day is ",round(mean(daysums, na.rm=TRUE)),".\n", sep="")
cat("The median number of steps per day is ",round(median(daysums, na.rm=TRUE)),".\n", sep="")
daysums <- rowSums(activityw[,-1], na.rm=TRUE)
hist(daysums,breaks=seq(0,25000,by=1000), main="Histogram of Daily Steps",  xlab="Steps")
daysums2 <- aggregate(activity[,c(1,2)], by=list(activity$date), FUN=sum, na.rm=TRUE)
View(activity)
daysums <- rowSums(activityw[,-1], na.rm=TRUE)
hist(daysums,breaks=seq(0,25000,by=1000), main="Histogram of Daily Steps",  xlab="Steps")
daysums2 <- aggregate(activity[,c("steps","interval")], by=list(activity$date), FUN=sum, na.rm=TRUE)
hist(daysums2$steps,breaks=seq(0,25000,by=1000), main="Histogram of Daily Steps",  xlab="Steps")
cat("The mean number of steps per day is ",round(mean(daysums, na.rm=TRUE)),".\n", sep="")
cat("The median number of steps per day is ",round(median(daysums, na.rm=TRUE)),".\n", sep="")
daysumsw <- rowSums(activityw[,-1], na.rm=TRUE)
hist(daysumsw,breaks=seq(0,25000,by=1000), main="Histogram of Daily Steps",  xlab="Steps")
daysums <- aggregate(activity[,c("steps","interval")], by=list(activity$date), FUN=sum, na.rm=TRUE)
hist(daysums$steps,breaks=seq(0,25000,by=1000), main="Histogram of Daily Steps",  xlab="Steps")
cat("The mean number of steps per day is ",round(mean(daysums$steps, na.rm=TRUE)),".\n", sep="")
cat("The median number of steps per day is ",round(median(daysums$steps, na.rm=TRUE)),".\n", sep="")
timemeansw <- colMeans(activityw[,-1], na.rm=TRUE)
# Calculate times in decimal hours and then do the plot.
dectimesw <- 100 * (as.numeric(names(timemeansw)) %/% 100 + as.numeric(names(timemeans)) %% 100 / 60)
plot(dectimesw,timemeansw,type="l", xlab="Interval", ylab="Number of Steps", main=" Average Daily Activity Pattern")
cat("The maximum occurs in the interval starting at ",names(timemeansw)[which.max(timemeansw)],".\n",sep="")
timemeansw <- colMeans(activityw[,-1], na.rm=TRUE)
# Calculate times in decimal hours and then do the plot.
dectimesw <- 100 * (as.numeric(names(timemeansw)) %/% 100 + as.numeric(names(timemeans)) %% 100 / 60)
plot(dectimesw,timemeansw,type="l", xlab="Interval", ylab="Number of Steps", main=" Average Daily Activity Pattern")
timemeans <- aggregate(activity[,c("steps","dates")], by=list(activity$interval), FUN=mean, na.rm=TRUE)
View(activity)
timemeansw <- colMeans(activityw[,-1], na.rm=TRUE)
# Calculate times in decimal hours and then do the plot.
dectimesw <- 100 * (as.numeric(names(timemeansw)) %/% 100 + as.numeric(names(timemeans)) %% 100 / 60)
plot(dectimesw,timemeansw,type="l", xlab="Interval", ylab="Number of Steps", main=" Average Daily Activity Pattern")
timemeans <- aggregate(activity[,c("steps","date")], by=list(activity$interval), FUN=mean, na.rm=TRUE)
timemeans$dectime <- 100 * (as.numeric(names(timemeans$interval)) %/% 100 + as.numeric(names(timemeans$interval)) %% 100 / 60)
timemeansw <- colMeans(activityw[,-1], na.rm=TRUE)
# Calculate times in decimal hours and then do the plot.
dectimesw <- 100 * (as.numeric(names(timemeansw)) %/% 100 + as.numeric(names(timemeans)) %% 100 / 60)
plot(dectimesw,timemeansw,type="l", xlab="Interval", ylab="Number of Steps", main=" Average Daily Activity Pattern")
timemeansw <- colMeans(activityw[,-1], na.rm=TRUE)
# Calculate times in decimal hours and then do the plot.
dectimesw <- 100 * (as.numeric(names(timemeansw)) %/% 100 + as.numeric(names(timemeans)) %% 100 / 60)
plot(dectimesw, timemeansw, type="l", xlab="Interval", ylab="Number of Steps", main=" Average Daily Activity Pattern")
timemeansw <- colMeans(activityw[,-1], na.rm=TRUE)
# Calculate times in decimal hours and then do the plot.
dectimesw <- 100 * (as.numeric(names(timemeansw)) %/% 100 + as.numeric(names(timemeans)) %% 100 / 60)
timemeansw <- colMeans(activityw[,-1], na.rm=TRUE)
# Calculate times in decimal hours and then do the plot.
dectimesw <- 100 * (as.numeric(names(timemeansw)) %/% 100 + as.numeric(names(timemeansw)) %% 100 / 60)
plot(dectimesw, timemeansw, type="l", xlab="Interval", ylab="Number of Steps", main=" Average Daily Activity Pattern")
timemeans <- aggregate(activity[,c("steps","date")], by=list(activity$interval), FUN=mean, na.rm=TRUE)
timemeans$dectime <- 100 * (as.numeric(timemeans$interval) %/% 100 + as.numeric(timemeans$interval) %% 100 / 60)
View(timemeans)
timemeans <- aggregate(activity[,c("steps","date")], by=list(interval=activity$interval), FUN=mean, na.rm=TRUE)
timemeans <- aggregate(activity[,c("steps","date")], by=list(activity$interval), FUN=mean, na.rm=TRUE)
timemeans <- aggregate(activity[,c("steps","date")], by=list(activity$interval), FUN=mean, na.rm=TRUE)
View(timemeans)
timemeans <- aggregate(activity[,c("steps","date")], by=list(activity$interval), FUN=mean, na.rm=TRUE)
daysumsw <- rowSums(activityw[,-1], na.rm=TRUE)
hist(daysumsw,breaks=seq(0,25000,by=1000), main="Histogram of Daily Steps",  xlab="Steps")
daysums <- aggregate(activity[,c("steps")], by=list(activity$date), FUN=sum, na.rm=TRUE)
hist(daysums$steps,breaks=seq(0,25000,by=1000), main="Histogram of Daily Steps",  xlab="Steps")
daysumsw <- rowSums(activityw[,-1], na.rm=TRUE)
hist(daysumsw,breaks=seq(0,25000,by=1000), main="Histogram of Daily Steps",  xlab="Steps")
daysums <- aggregate(activity[,c("steps","interval")], by=list(activity$date), FUN=sum, na.rm=TRUE)
hist(daysums$steps,breaks=seq(0,25000,by=1000), main="Histogram of Daily Steps",  xlab="Steps")
cat("The mean number of steps per day is ",round(mean(daysums$steps, na.rm=TRUE)),".\n", sep="")
cat("The median number of steps per day is ",round(median(daysums$steps, na.rm=TRUE)),".\n", sep="")
daysumsw <- rowSums(activityw[,-1], na.rm=TRUE)
hist(daysumsw,breaks=seq(0,25000,by=1000), main="Histogram of Daily Steps",  xlab="Steps")
daysums <- aggregate(activity[,c("steps","date")], by=list(activity$date), FUN=sum, na.rm=TRUE)
daysumsw <- rowSums(activityw[,-1], na.rm=TRUE)
hist(daysumsw,breaks=seq(0,25000,by=1000), main="Histogram of Daily Steps",  xlab="Steps")
daysums <- aggregate(activity[,c("steps","interval")], by=list(activity$date), FUN=sum, na.rm=TRUE)
hist(daysums$steps,breaks=seq(0,25000,by=1000), main="Histogram of Daily Steps",  xlab="Steps")
cat("The mean number of steps per day is ",round(mean(daysums$steps, na.rm=TRUE)),".\n", sep="")
cat("The median number of steps per day is ",round(median(daysums$steps, na.rm=TRUE)),".\n", sep="")
View(daysums)
daysumsw <- rowSums(activityw[,-1], na.rm=TRUE)
hist(daysumsw,breaks=seq(0,25000,by=1000), main="Histogram of Daily Steps",  xlab="Steps")
daysums <- aggregate(activity[,"interval"], by=list(activity$date), FUN=sum, na.rm=TRUE)
hist(daysums$steps,breaks=seq(0,25000,by=1000), main="Histogram of Daily Steps",  xlab="Steps")
daysumsw <- rowSums(activityw[,-1], na.rm=TRUE)
hist(daysumsw,breaks=seq(0,25000,by=1000), main="Histogram of Daily Steps",  xlab="Steps")
daysums <- aggregate(activity[,"steps"], by=list(activity$date), FUN=sum, na.rm=TRUE)
hist(daysums$steps,breaks=seq(0,25000,by=1000), main="Histogram of Daily Steps",  xlab="Steps")
daysumsw <- rowSums(activityw[,-1], na.rm=TRUE)
hist(daysumsw,breaks=seq(0,25000,by=1000), main="Histogram of Daily Steps",  xlab="Steps")
daysums <- aggregate(activity["date","steps"], by=list(activity$date), FUN=sum, na.rm=TRUE)
daysumsw <- rowSums(activityw[,-1], na.rm=TRUE)
hist(daysumsw,breaks=seq(0,25000,by=1000), main="Histogram of Daily Steps",  xlab="Steps")
daysums <- aggregate(activity[,c("date","steps")], by=list(activity$date), FUN=sum, na.rm=TRUE)
daysumsw <- rowSums(activityw[,-1], na.rm=TRUE)
hist(daysumsw,breaks=seq(0,25000,by=1000), main="Histogram of Daily Steps",  xlab="Steps")
daysums <- aggregate(activity[,c("interval","steps")], by=list(activity$date), FUN=sum, na.rm=TRUE)
hist(daysums$steps,breaks=seq(0,25000,by=1000), main="Histogram of Daily Steps",  xlab="Steps")
cat("The mean number of steps per day is ",round(mean(daysums$steps, na.rm=TRUE)),".\n", sep="")
cat("The median number of steps per day is ",round(median(daysums$steps, na.rm=TRUE)),".\n", sep="")
View(daysums)
daysumsw <- rowSums(activityw[,-1], na.rm=TRUE)
hist(daysumsw,breaks=seq(0,25000,by=1000), main="Histogram of Daily Steps",  xlab="Steps")
daysums <- aggregate(activity[,c("steps")], by=list(activity$date), FUN=sum, na.rm=TRUE)
hist(daysums$steps,breaks=seq(0,25000,by=1000), main="Histogram of Daily Steps",  xlab="Steps")
View(daysums)
daysumsw <- rowSums(activityw[,-1], na.rm=TRUE)
hist(daysumsw,breaks=seq(0,25000,by=1000), main="Histogram of Daily Steps",  xlab="Steps")
daysums <- aggregate(activity[,c("steps")], by=list(activity$date), FUN=sum, na.rm=TRUE)
hist(daysums$x,breaks=seq(0,25000,by=1000), main="Histogram of Daily Steps",  xlab="Steps")
cat("The mean number of steps per day is ",round(mean(daysums$steps, na.rm=TRUE)),".\n", sep="")
cat("The median number of steps per day is ",round(median(daysums$steps, na.rm=TRUE)),".\n", sep="")
daysumsw <- rowSums(activityw[,-1], na.rm=TRUE)
hist(daysumsw,breaks=seq(0,25000,by=1000), main="Histogram of Daily Steps",  xlab="Steps")
daysums <- aggregate(activity[,c("steps")], by=list(date=activity$date), FUN=sum, na.rm=TRUE)
hist(daysums$x,breaks=seq(0,25000,by=1000), main="Histogram of Daily Steps",  xlab="Steps")
cat("The mean number of steps per day is ",round(mean(daysums$steps, na.rm=TRUE)),".\n", sep="")
cat("The median number of steps per day is ",round(median(daysums$steps, na.rm=TRUE)),".\n", sep="")
View(activity)
View(daysums)
daysumsw <- rowSums(activityw[,-1], na.rm=TRUE)
hist(daysumsw,breaks=seq(0,25000,by=1000), main="Histogram of Daily Steps",  xlab="Steps")
daysums <- aggregate(activity[,c("steps")], by=list(date=activity$date), FUN=sum, na.rm=TRUE)
hist(daysums$x,breaks=seq(0,25000,by=1000), main="Histogram of Daily Steps",  xlab="Steps")
cat("The mean number of steps per day is ",round(mean(daysums$x, na.rm=TRUE)),".\n", sep="")
cat("The median number of steps per day is ",round(median(daysums$x, na.rm=TRUE)),".\n", sep="")
daysumsw <- rowSums(activityw[,-1], na.rm=TRUE)
hist(daysumsw,breaks=seq(0,25000,by=1000), main="Histogram of Daily Steps",  xlab="Steps")
daysums <- aggregate(activity[,"steps"], by=list(date=activity$date), FUN=sum, na.rm=TRUE)
hist(daysums$x,breaks=seq(0,25000,by=1000), main="Histogram of Daily Steps",  xlab="Steps")
cat("The mean number of steps per day is ",round(mean(daysums$x, na.rm=TRUE)),".\n", sep="")
cat("The median number of steps per day is ",round(median(daysums$x, na.rm=TRUE)),".\n", sep="")
timemeansw <- colMeans(activityw[,-1], na.rm=TRUE)
# Calculate times in decimal hours and then do the plot.
dectimesw <- 100 * (as.numeric(names(timemeansw)) %/% 100 + as.numeric(names(timemeansw)) %% 100 / 60)
plot(dectimesw, timemeansw, type="l", xlab="Interval", ylab="Number of Steps", main=" Average Daily Activity Pattern")
timemeans <- aggregate(activity[,"steps"], by=list(interval=activity$interval), FUN=mean, na.rm=TRUE)
timemeans$dectime <- 100 * (as.numeric(timemeans$interval) %/% 100 + as.numeric(timemeans$interval) %% 100 / 60)
plot(timemeans$dectime, timemeans$steps, type="l", xlab="Interval", ylab="Number of Steps", main=" Average Daily Activity Pattern")
cat("The maximum occurs in the interval starting at ",names(timemeansw)[which.max(timemeansw)],".\n",sep="")
View(timemeans)
View(timemeans)
View(timemeans)
View(timemeans)
View(timemeans)
timemeansw <- colMeans(activityw[,-1], na.rm=TRUE)
# Calculate times in decimal hours and then do the plot.
dectimesw <- 100 * (as.numeric(names(timemeansw)) %/% 100 + as.numeric(names(timemeansw)) %% 100 / 60)
plot(dectimesw, timemeansw, type="l", xlab="Interval", ylab="Number of Steps", main=" Average Daily Activity Pattern")
timemeans <- aggregate(activity[,"steps"], by=list(interval=activity$interval), FUN=mean, na.rm=TRUE)
timemeans$dectime <- 100 * (as.numeric(timemeans$interval) %/% 100 + as.numeric(timemeans$interval) %% 100 / 60)
plot(timemeans$dectime, timemeans$x, type="l", xlab="Interval", ylab="Number of Steps", main=" Average Daily Activity Pattern")
cat("The maximum occurs in the interval starting at ",names(timemeansw)[which.max(timemeansw)],".\n",sep="")
timemeansw <- colMeans(activityw[,-1], na.rm=TRUE)
# Calculate times in decimal hours and then do the plot.
dectimesw <- 100 * (as.numeric(names(timemeansw)) %/% 100 + as.numeric(names(timemeansw)) %% 100 / 60)
plot(dectimesw, timemeansw, type="l", xlab="Interval", ylab="Number of Steps", main=" Average Daily Activity Pattern")
timemeans <- aggregate(activity[,"steps"], by=list(interval=activity$interval), FUN=mean, na.rm=TRUE)
timemeans$dectime <- 100 * timemeans$interval %/% 100 + as.numeric(timemeans$interval) %% 100 / 60)
timemeansw <- colMeans(activityw[,-1], na.rm=TRUE)
# Calculate times in decimal hours and then do the plot.
dectimesw <- 100 * (as.numeric(names(timemeansw)) %/% 100 + as.numeric(names(timemeansw)) %% 100 / 60)
plot(dectimesw, timemeansw, type="l", xlab="Interval", ylab="Number of Steps", main=" Average Daily Activity Pattern")
timemeans <- aggregate(activity[,"steps"], by=list(interval=activity$interval), FUN=mean, na.rm=TRUE)
timemeans$dectime <- 100 * (timemeans$interval %/% 100 + as.numeric(timemeans$interval) %% 100 / 60)
plot(timemeans$dectime, timemeans$x, type="l", xlab="Interval", ylab="Number of Steps", main=" Average Daily Activity Pattern")
cat("The maximum occurs in the interval starting at ",names(timemeansw)[which.max(timemeansw)],".\n",sep="")
timemeansw <- colMeans(activityw[,-1], na.rm=TRUE)
# Calculate times in decimal hours and then do the plot.
dectimesw <- 100 * (as.numeric(names(timemeansw)) %/% 100 + as.numeric(names(timemeansw)) %% 100 / 60)
plot(dectimesw, timemeansw, type="l", xlab="Interval", ylab="Number of Steps", main=" Average Daily Activity Pattern")
timemeans <- aggregate(activity[,"steps"], by=list(interval=activity$interval), FUN=mean, na.rm=TRUE)
timemeans$dectime <- 100 * (timemeans$interval %/% 100 + timemeans$interval %% 100 / 60)
plot(timemeans$dectime, timemeans$x, type="l", xlab="Interval", ylab="Number of Steps", main=" Average Daily Activity Pattern")
cat("The maximum occurs in the interval starting at ",names(timemeansw)[which.max(timemeansw)],".\n",sep="")
timemeansw <- colMeans(activityw[,-1], na.rm=TRUE)
# Calculate times in decimal hours and then do the plot.
dectimesw <- 100 * (as.numeric(names(timemeansw)) %/% 100 + as.numeric(names(timemeansw)) %% 100 / 60)
plot(dectimesw, timemeansw, type="l", xlab="Interval", ylab="Number of Steps", main=" Average Daily Activity Pattern")
timemeans <- aggregate(activity[,"steps"], by=list(interval=activity$interval), FUN=mean, na.rm=TRUE)
timemeans$dectime <- 100 * (timemeans$interval %/% 100 + timemeans$interval %% 100 / 60)
plot(timemeans$dectime, timemeans$x, type="l", xlab="Interval", ylab="Number of Steps", main=" Average Daily Activity Pattern")
cat("The maximum occurs in the interval starting at ",names(timemeans$x)[which.max(timemeans$x)],".\n",sep="")
timemeansw <- colMeans(activityw[,-1], na.rm=TRUE)
# Calculate times in decimal hours and then do the plot.
dectimesw <- 100 * (as.numeric(names(timemeansw)) %/% 100 + as.numeric(names(timemeansw)) %% 100 / 60)
plot(dectimesw, timemeansw, type="l", xlab="Interval", ylab="Number of Steps", main=" Average Daily Activity Pattern")
timemeans <- aggregate(activity[,"steps"], by=list(interval=activity$interval), FUN=mean, na.rm=TRUE)
timemeans$dectime <- 100 * (timemeans$interval %/% 100 + timemeans$interval %% 100 / 60)
plot(timemeans$dectime, timemeans$x, type="l", xlab="Interval", ylab="Number of Steps", main=" Average Daily Activity Pattern")
cat("The maximum occurs in the interval starting at ",timemeans$dectime[which.max(timemeans$x)],".\n",sep="")
timemeansw <- colMeans(activityw[,-1], na.rm=TRUE)
# Calculate times in decimal hours and then do the plot.
dectimesw <- 100 * (as.numeric(names(timemeansw)) %/% 100 + as.numeric(names(timemeansw)) %% 100 / 60)
plot(dectimesw, timemeansw, type="l", xlab="Interval", ylab="Number of Steps", main=" Average Daily Activity Pattern")
timemeans <- aggregate(activity[,"steps"], by=list(interval=activity$interval), FUN=mean, na.rm=TRUE)
timemeans$dectime <- 100 * (timemeans$interval %/% 100 + timemeans$interval %% 100 / 60)
plot(timemeans$dectime, timemeans$x, type="l", xlab="Interval", ylab="Number of Steps", main=" Average Daily Activity Pattern")
cat("The maximum occurs in the interval starting at ",timemeans$interval[which.max(timemeans$x)],".\n",sep="")
View(timemeans)
View(timemeans)
View(activity)
# Create a column with NAs replaced with the mean for that time.
activity$stepsi <- ifelse(is.na(activity$steps),-1,activity$steps)
View(activity)
View(timemeans)
View(timemeans)
# Create a column with NAs replaced with the mean for that time.
activity$stepsi <- ifelse(is.na(activity$steps),timemeans[match(activity$interval,ttimemeans$interval)],activity$steps)
# Create a column with NAs replaced with the mean for that time.
activity$stepsi <- ifelse(is.na(activity$steps),timemeans[match(activity$interval,timemeans$interval)],activity$steps)
# Create a column with NAs replaced with the mean for that time.
activity$stepsi <- ifelse(is.na(activity$steps),timemeans$x[match(activity$interval,timemeans$interval)],activity$steps)
View(activity)
cat("The dataset had ",sum(is.na(activity$steps)), " rows with missing values.\n", sep="")
# Create a dataframe with NAs replaced with the mean for that time.
activityf <- activityw
for(i in 2:ncol(activityw)) {
activityf[is.na(activityw[,i]),i] <- timemeans[i-1]
}
cat("The dataset had ",sum(is.na(activity$steps)), " rows with missing values.\n", sep="")
# Create a column with NAs replaced with the mean for that time.
activity$stepsi <- ifelse(is.na(activity$steps),timemeans$x[match(activity$interval,timemeans$interval)],activity$steps)
# Calculate the day totals again.
daysumsi <- aggregate(activity[,"stepsi"], by=list(date=activity$date), FUN=sum, na.rm=TRUE)
hist(daysumsi$x,breaks=seq(0,25000,by=1000), main="Histogram of Daily Steps (after imputation", xlab="Steps")
cat("The mean number of steps per day is now ",round(mean(daysumsf, na.rm=TRUE))," rather than ",round(mean(daysums, na.rm=TRUE)),".\n", sep="")
cat("The median number of steps per day is now ",round(median(daysumsf, na.rm=TRUE))," rather than ",round(median(daysums, na.rm=TRUE)),".\n", sep="")
cat("The dataset had ",sum(is.na(activity$steps)), " rows with missing values.\n", sep="")
# Create a column with NAs replaced with the mean for that time.
activity$stepsi <- ifelse(is.na(activity$steps),timemeans$x[match(activity$interval,timemeans$interval)],activity$steps)
# Calculate the day totals again.
daysumsi <- aggregate(activity[,"stepsi"], by=list(date=activity$date), FUN=sum, na.rm=TRUE)
hist(daysumsi$x,breaks=seq(0,25000,by=1000), main="Histogram of Daily Steps (after imputation", xlab="Steps")
cat("The mean number of steps per day is now ",round(mean(daysumsi, na.rm=TRUE))," rather than ",round(mean(daysums, na.rm=TRUE)),".\n", sep="")
cat("The median number of steps per day is now ",round(median(daysumsi, na.rm=TRUE))," rather than ",round(median(daysums, na.rm=TRUE)),".\n", sep="")
cat("The dataset had ",sum(is.na(activity$steps)), " rows with missing values.\n", sep="")
# Create a column with NAs replaced with the mean for that time.
activity$stepsi <- ifelse(is.na(activity$steps),timemeans$x[match(activity$interval,timemeans$interval)],activity$steps)
# Calculate the day totals again.
daysumsi <- aggregate(activity[,"stepsi"], by=list(date=activity$date), FUN=sum, na.rm=TRUE)
hist(daysumsi$x,breaks=seq(0,25000,by=1000), main="Histogram of Daily Steps (after imputation", xlab="Steps")
cat("The mean number of steps per day is now ",round(mean(daysumsi$x, na.rm=TRUE))," rather than ",round(mean(daysums$x, na.rm=TRUE)),".\n", sep="")
cat("The median number of steps per day is now ",round(median(daysumsi, na.rm=TRUE))," rather than ",round(median(daysums, na.rm=TRUE)),".\n", sep="")
cat("The dataset had ",sum(is.na(activity$steps)), " rows with missing values.\n", sep="")
# Create a column with NAs replaced with the mean for that time.
activity$stepsi <- ifelse(is.na(activity$steps),timemeans$x[match(activity$interval,timemeans$interval)],activity$steps)
# Calculate the day totals again.
daysumsi <- aggregate(activity[,"stepsi"], by=list(date=activity$date), FUN=sum, na.rm=TRUE)
hist(daysumsi$x,breaks=seq(0,25000,by=1000), main="Histogram of Daily Steps (after imputation", xlab="Steps")
cat("The mean number of steps per day is now ",round(mean(daysumsi$x, na.rm=TRUE))," rather than ",round(mean(daysums$x, na.rm=TRUE)),".\n", sep="")
cat("The median number of steps per day is now ",round(median(daysumsi$x, na.rm=TRUE))," rather than ",round(median(daysums$x, na.rm=TRUE)),".\n", sep="")
cat("The total number of steps has",ifelse(sum(daysumsi$x, na.rm=TRUE) > sum(daysums$x, na.rm=TRUE),"increased.","decreased."))
View(daysums)
View(timemeans)
timemeansi <- aggregate(activity[,"stepsi"], by=list(interval=activity$interval), FUN=mean, na.rm=TRUE)
timemeansi$dectime <- 100 * (timemeansi$interval %/% 100 + timemeansi$interval %% 100 / 60)
plot(timemeansi$dectime, timemeansi$x, type="l", xlab="Interval", ylab="Number of Steps", main=" Average Daily Activity Pattern (after imputation)")
timemeansi <- aggregate(activity[,"stepsi"], by=list(interval=activity$interval), FUN=mean, na.rm=TRUE)
timemeansi$dectime <- 100 * (timemeansi$interval %/% 100 + timemeansi$interval %% 100 / 60)
plot(timemeansi$dectime, timemeansi$x, type="l", xlab="Interval", ylab="Number of Steps", main=" Average Daily Activity Pattern (after imputation)")
#Calculate a vector of day names.
daysumsi$day <- weekdays(as.Date(activity$date,format="%Y-%m-%d"))
#Calculate a vector of day names.
activity$day <- weekdays(as.Date(activity$date,format="%Y-%m-%d"))
View(activity)
#Calculate a vector of booleans indicating weekend days.
activity$daytype <- ifelse((activity$day == "Saturday") | (activity$day == "Sunday"),"weekend","weekday")
View(activity)
#Caclculate the interval means for each day type (weekday or weekend).
timemeansi <- aggregate(activity[,"stepsi"], by=list(interval=activity$interval,daytype=activity$daytype), FUN=mean, na.rm=TRUE)
View(timemeansi)
#Caclculate the interval means for each day type (weekday or weekend).
timemeansi <- aggregate(activity[,"stepsi"], by=list(interval=activity$interval,daytype=activity$daytype), FUN=mean, na.rm=TRUE)
timemeansi$dectime <- 100 * (timemeansi$interval %/% 100 + timemeansi$interval %% 100 / 60)
library(lattice)
xyplot(means~times|daytype, data=timemeansi, type="l", xlab="Interval", ylab="Number of steps",layout=c(1,2), ylim=c(0,250))
xyplot(x~times|daytype, data=timemeansi, type="l", xlab="Interval", ylab="Number of steps",layout=c(1,2), ylim=c(0,250))
View(timemeans)
xyplot(means~dectimes|daytype, data=timemeansi, type="l", xlab="Interval", ylab="Number of steps",layout=c(1,2), ylim=c(0,250))
View(timemeansi)
xyplot(x~dectimes|daytype, data=timemeansi, type="l", xlab="Interval", ylab="Number of steps",layout=c(1,2), ylim=c(0,250))
#Calculate a vector of day names.
activity$day <- weekdays(as.Date(activity$date,format="%Y-%m-%d"))
#Calculate a vector of booleans indicating weekend days.
activity$daytype <- ifelse((activity$day == "Saturday") | (activity$day == "Sunday"),"weekend","weekday")
#Caclculate the interval means for each day type (weekday or weekend).
timemeansi <- aggregate(activity[,"stepsi"], by=list(interval=activity$interval,daytype=activity$daytype), FUN=mean, na.rm=TRUE)
timemeansi$dectime <- 100 * (timemeansi$interval %/% 100 + timemeansi$interval %% 100 / 60)
library(lattice)
xyplot(x~dectimes|daytype, data=timemeansi, type="l", xlab="Interval", ylab="Number of steps",layout=c(1,2), ylim=c(0,250))
View(timemeansi)
#Calculate a vector of day names.
activity$day <- weekdays(as.Date(activity$date,format="%Y-%m-%d"))
#Calculate a vector of booleans indicating weekend days.
activity$daytype <- ifelse((activity$day == "Saturday") | (activity$day == "Sunday"),"weekend","weekday")
#Caclculate the interval means for each day type (weekday or weekend).
timemeansi <- aggregate(activity[,"stepsi"], by=list(interval=activity$interval,daytype=activity$daytype), FUN=mean, na.rm=TRUE)
timemeansi$dectime <- 100 * (timemeansi$interval %/% 100 + timemeansi$interval %% 100 / 60)
library(lattice)
xyplot(x~dectimes|daytype, data=timemeansi, type="l", xlab="Interval", ylab="Number of steps",layout=c(1,2), ylim=c(0,250))
#Calculate a vector of day names.
activity$day <- weekdays(as.Date(activity$date,format="%Y-%m-%d"))
#Calculate a vector of booleans indicating weekend days.
activity$daytype <- ifelse((activity$day == "Saturday") | (activity$day == "Sunday"),"weekend","weekday")
#Caclculate the interval means for each day type (weekday or weekend).
timemeansi <- aggregate(activity[,"stepsi"], by=list(interval=activity$interval,daytype=activity$daytype), FUN=mean, na.rm=TRUE)
timemeansi$dectime <- 100 * (timemeansi$interval %/% 100 + timemeansi$interval %% 100 / 60)
timemeansi$daytype <- as.factor(timemeansi.daytype)
#Calculate a vector of day names.
activity$day <- weekdays(as.Date(activity$date,format="%Y-%m-%d"))
#Calculate a vector of booleans indicating weekend days.
activity$daytype <- ifelse((activity$day == "Saturday") | (activity$day == "Sunday"),"weekend","weekday")
#Caclculate the interval means for each day type (weekday or weekend).
timemeansi <- aggregate(activity[,"stepsi"], by=list(interval=activity$interval,daytype=activity$daytype), FUN=mean, na.rm=TRUE)
timemeansi$dectime <- 100 * (timemeansi$interval %/% 100 + timemeansi$interval %% 100 / 60)
timemeansi$daytype <- as.factor(timemeansi$daytype)
library(lattice)
xyplot(x~dectimes|daytype, data=timemeansi, type="l", xlab="Interval", ylab="Number of steps",layout=c(1,2), ylim=c(0,250))
#Calculate a vector of day names.
activity$day <- weekdays(as.Date(activity$date,format="%Y-%m-%d"))
#Calculate a vector of booleans indicating weekend days.
activity$daytype <- ifelse((activity$day == "Saturday") | (activity$day == "Sunday"),"weekend","weekday")
#Caclculate the interval means for each day type (weekday or weekend).
timemeansi <- aggregate(activity[,"stepsi"], by=list(interval=activity$interval,daytype=activity$daytype), FUN=mean, na.rm=TRUE)
timemeansi$dectime <- 100 * (timemeansi$interval %/% 100 + timemeansi$interval %% 100 / 60)
timemeansi$daytype <- as.factor(timemeansi$daytype)
library(lattice)
xyplot(x~dectimes|daytype, data=timemeansi, type="l", xlab="Interval", ylab="Number of steps",layout=c(1,3), ylim=c(0,250))
View(timemeansi)
#Calculate a vector of day names.
activity$day <- weekdays(as.Date(activity$date,format="%Y-%m-%d"))
#Calculate a vector of booleans indicating weekend days.
activity$daytype <- as.factor(ifelse((activity$day == "Saturday") | (activity$day == "Sunday"),"weekend","weekday"))
#Caclculate the interval means for each day type (weekday or weekend).
timemeansi <- aggregate(activity[,"stepsi"], by=list(interval=activity$interval,daytype=activity$daytype), FUN=mean, na.rm=TRUE)
timemeansi$dectime <- 100 * (timemeansi$interval %/% 100 + timemeansi$interval %% 100 / 60)
library(lattice)
xyplot(x~dectimes|daytype, data=timemeansi, type="l", xlab="Interval", ylab="Number of steps",layout=c(1,2), ylim=c(0,250))
#Calculate a vector of day names.
activity$day <- weekdays(as.Date(activity$date,format="%Y-%m-%d"))
#Calculate a vector of booleans indicating weekend days.
activity$daytype <- as.factor(ifelse((activity$day == "Saturday") | (activity$day == "Sunday"),"weekend","weekday"))
#Caclculate the interval means for each day type (weekday or weekend).
timemeansi <- aggregate(activity[,"stepsi"], by=list(interval=activity$interval,daytype=activity$daytype), FUN=mean, na.rm=TRUE)
timemeansi$dectime <- 100 * (timemeansi$interval %/% 100 + timemeansi$interval %% 100 / 60)
library(lattice)
xyplot(x~dectimes, data=timemeansi, type="l", xlab="Interval", ylab="Number of steps",layout=c(1,2), ylim=c(0,250))
#Calculate a vector of day names.
activity$day <- weekdays(as.Date(activity$date,format="%Y-%m-%d"))
#Calculate a vector of booleans indicating weekend days.
activity$daytype <- as.factor(ifelse((activity$day == "Saturday") | (activity$day == "Sunday"),"weekend","weekday"))
#Caclculate the interval means for each day type (weekday or weekend).
timemeansi <- aggregate(activity[,"stepsi"], by=list(interval=activity$interval,daytype=activity$daytype), FUN=mean, na.rm=TRUE)
timemeansi$dectime <- 100 * (timemeansi$interval %/% 100 + timemeansi$interval %% 100 / 60)
library(lattice)
xyplot(x~dectimes|daytype, data=timemeansi, type="l", xlab="Interval", ylab="Number of steps",layout=c(1,2), ylim=c(0,250))
View(timemeansi)
#Calculate a vector of day names.
activity$day <- weekdays(as.Date(activity$date,format="%Y-%m-%d"))
#Calculate a vector of booleans indicating weekend days.
activity$daytype <- as.factor(ifelse((activity$day == "Saturday") | (activity$day == "Sunday"),"weekend","weekday"))
#Caclculate the interval means for each day type (weekday or weekend).
timemeansi <- aggregate(activity[,"stepsi"], by=list(interval=activity$interval,daytype=activity$daytype), FUN=mean, na.rm=TRUE)
timemeansi$dectime <- 100 * (timemeansi$interval %/% 100 + timemeansi$interval %% 100 / 60)
library(lattice)
xyplot(x~interval|daytype, data=timemeansi, type="l", xlab="Interval", ylab="Number of steps",layout=c(1,2), ylim=c(0,250))
View(timemeansi)
#Calculate a vector of day names.
activity$day <- weekdays(as.Date(activity$date,format="%Y-%m-%d"))
#Calculate a vector of booleans indicating weekend days.
activity$daytype <- as.factor(ifelse((activity$day == "Saturday") | (activity$day == "Sunday"),"weekend","weekday"))
#Caclculate the interval means for each day type (weekday or weekend).
timemeansi <- aggregate(activity[,"stepsi"], by=list(interval=activity$interval,daytype=activity$daytype), FUN=mean, na.rm=TRUE)
timemeansi$dectime <- 100 * (timemeansi$interval %/% 100 + timemeansi$interval %% 100 / 60)
library(lattice)
xyplot(x~dectime|daytype, data=timemeansi, type="l", xlab="Interval", ylab="Number of steps",layout=c(1,2), ylim=c(0,250))
activity <- read.csv("~/GitHub/RepData_PeerAssessment1/activity/activity.csv")
# Convert to wide format
rm(list=ls())
activity <- read.csv("~/GitHub/RepData_PeerAssessment1/activity/activity.csv")
# Convert to wide format
daysums <- aggregate(activity[,"steps"], by=list(date=activity$date), FUN=sum, na.rm=TRUE)
hist(daysums$x,breaks=seq(0,25000,by=1000), main="Histogram of Daily Steps", xlab="Steps")
cat("The mean number of steps per day is ",round(mean(daysums$x, na.rm=TRUE)),".\n", sep="")
cat("The median number of steps per day is ",round(median(daysums$x, na.rm=TRUE)),".\n", sep="")
timemeansw <- colMeans(activityw[,-1], na.rm=TRUE)
timemeans <- aggregate(activity[,"steps"], by=list(interval=activity$interval), FUN=mean, na.rm=TRUE)
timemeans$dectime <- 100 * (timemeans$interval %/% 100 + timemeans$interval %% 100 / 60)
plot(timemeans$dectime, timemeans$x, type="l", xlab="Interval", ylab="Number of Steps", main=" Average Daily Activity Pattern")
cat("The maximum occurs in the interval starting at ",timemeans$interval[which.max(timemeans$x)],".\n",sep="")
cat("The dataset had ",sum(is.na(activity$steps)), " rows with missing values.\n", sep="")
# Create a column with NAs replaced with the mean for that time.
activity$stepsi <- ifelse(is.na(activity$steps),timemeans$x[match(activity$interval,timemeans$interval)],activity$steps)
# Calculate the day totals again.
daysumsi <- aggregate(activity[,"stepsi"], by=list(date=activity$date), FUN=sum, na.rm=TRUE)
hist(daysumsi$x,breaks=seq(0,25000,by=1000), main="Histogram of Daily Steps (after imputation", xlab="Steps")
cat("The mean number of steps per day is now ",round(mean(daysumsi$x, na.rm=TRUE))," rather than ",round(mean(daysums$x, na.rm=TRUE)),".\n", sep="")
cat("The median number of steps per day is now ",round(median(daysumsi$x, na.rm=TRUE))," rather than ",round(median(daysums$x, na.rm=TRUE)),".\n", sep="")
cat("The total number of steps has",ifelse(sum(daysumsi$x, na.rm=TRUE) > sum(daysums$x, na.rm=TRUE),"increased.","decreased."))
#Calculate a vector of day names.
activity$day <- weekdays(as.Date(activity$date,format="%Y-%m-%d"))
#Calculate a vector of booleans indicating weekend days.
activity$daytype <- as.factor(ifelse((activity$day == "Saturday") | (activity$day == "Sunday"),"weekend","weekday"))
#Caclculate the interval means for each day type (weekday or weekend).
timemeansi <- aggregate(activity[,"stepsi"], by=list(interval=activity$interval ,daytype=activity$daytype), FUN=mean, na.rm=TRUE)
timemeansi$dectime <- 100 * (timemeansi$interval %/% 100 + timemeansi$interval %% 100 / 60)
library(lattice)
xyplot(x~dectime|daytype, data=timemeansi, type="l", xlab="Interval", ylab="Number of steps",layout=c(1,2), ylim=c(0,250))
